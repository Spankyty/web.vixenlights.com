name: Docker

on:
  workflow_call:
    inputs:
      environment:
        required: true
        type: string
      image-name:
        required: true
        type: string

env:
  REGISTRY: ghcr.io

jobs:
  docker:
    environment: ${{ inputs.environment }}
    runs-on: ubuntu-latest
    steps:
      - name: setup timezone
        uses: szenius/set-timezone@v2.0
        with:
          timezoneLinux: "America/Chicago"
    
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Fetch release data for vixenlights/vixen
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          mkdir -p data/release
          gh api -H "Accept: application/vnd.github+json" \
                 /repos/vixenlights/vixen/releases \
                 > data/release/all.json
          gh api -H "Accept: application/vnd.github+json" \
                 /repos/vixenlights/vixen/releases/latest \
                 > data/release/latest.json

      - name: Setup Hugo
        uses: peaceiris/actions-hugo@v3
        with:
          hugo-version: '0.109.0'
          extended: true
      
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          # The action defaults to search for the dependency file (package-lock.json,
          # npm-shrinkwrap.json or yarn.lock) in the repository root, and uses its
          # hash as a part of the cache key.
          # https://github.com/actions/setup-node/blob/main/docs/advanced-usage.md#caching-packages-data
          cache-dependency-path: '**/package-lock.json'

      - run: npm ci

      - name: Hugo build
        run: hugo --environment ${{ inputs.environment }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ inputs.image-name }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Trigger watchtower
        shell: bash
        env:
          TOKEN: ${{ secrets.WATCHTOWER_TOKEN }}
          ENDPOINT: ${{ secrets.WATCHTOWER_ENDPOINT }}
        run: |
          curl -i -H "Authorization: Bearer $TOKEN" $ENDPOINT
